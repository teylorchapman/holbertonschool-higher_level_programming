==========================
Module: 7-base-geometry.py
==========================
``BaseGeometry()`` is a class with an `area()` 
and public instance method: `integer_validator`

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

        >>> bg = BaseGeometry()

Testing for documentation
    >>> len(__import__('7-base_geometry').__doc__) > 1
    True
    >>> len(__import__('7-base_geometry').BaseGeometry.__doc__) > 1
    True
    >>> len(__import__('7-base_geometry').BaseGeometry.area.__doc__) > 1
    True
    >>> len(__import__('7-base_geometry').BaseGeometry.integer_validator.__doc__) > 1
    True
    >>> print(bg.__doc__)
     Empty class, except for exception
    <BLANKLINE>

Testing for improper input
    >>> bg.integer_validator("distance", -4)
    Traceback (most recent call last):
        ...
    ValueError: distance must be greater than 0

    >>> bg.integer_validator("length", 0)
    Traceback (most recent call last):
        ...
    ValueError: length must be greater than 0

    >>> bg.integer_validator("Float", 3.14)
    Traceback (most recent call last):
        ...
    TypeError: Float must be an integer

    >>> bg.integer_validator("String", "Hello")
    Traceback (most recent call last):
        ...
    TypeError: String must be an integer

    >>> bg.integer_validator("None", None)
    Traceback (most recent call last):
        ...
    TypeError: None must be an integer

    >>> bg.integer_validator("Empty")
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("Extra", 1, 2)
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

Testing for valid input
>>> bg.integer_validator("Positive", 5)

>>> bg.integer_validator("Seven", 7)